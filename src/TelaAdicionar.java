import tiposInvestimento.*;
import register.Registro;
import javax.swing.JOptionPane;
import java.util.Stack;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

public class TelaAdicionar extends javax.swing.JFrame {
    private DefaultTableModel model;
    
    public TelaAdicionar() {
        initComponents();
    }

    public TelaAdicionar(JFrame parent, DefaultTableModel model) {
        initComponents();
        this.model = model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        selectInv = new javax.swing.JComboBox<>();
        spinnerTempo = new javax.swing.JSpinner();
        lblTempo = new javax.swing.JLabel();
        btnAddInv = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adicionar");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Adicionar investimento");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setText("Selecionar tipo de investimento:");

        selectInv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Poupança", "CDB", "Tesouro Selic", "Ações" }));
        selectInv.setSelectedIndex(-1);
        selectInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectInvActionPerformed(evt);
            }
        });

        lblTempo.setText("Tempo:");

        btnAddInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_add.png"))); // NOI18N
        btnAddInv.setText("Adicionar");
        btnAddInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInvActionPerformed(evt);
            }
        });

        jLabel4.setText("Valor Inicial (R$):");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(btnAddInv))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(selectInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(lblTempo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtValor, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(spinnerTempo))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(selectInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerTempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTempo))
                .addGap(18, 18, 18)
                .addComponent(btnAddInv)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectInvActionPerformed
        String inv = (String) selectInv.getSelectedItem();
        lblTempo.setText("Tempo em " + (inv.equals("Poupança") || inv.equals("Ações") ? "meses" : "anos") + ":");
    }//GEN-LAST:event_selectInvActionPerformed

    private void btnAddInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInvActionPerformed
        Registro registros = new Registro();
        String textoTxtValue = txtValor.getText().replace(",", ".");
        int tempoValue = (int) spinnerTempo.getValue();
        if (selectInv.getSelectedIndex() == -1) JOptionPane.showMessageDialog(null, "Selecione um tipo de investimento!"); 
        else if (txtValor.getText().isBlank()) JOptionPane.showMessageDialog(null, "Digite o valor do investimento inicial!");
        else if (Double.parseDouble(textoTxtValue) <= 0) JOptionPane.showMessageDialog(null, "O valor de investimento não pode ser menor ou igual a 0!");
        else if (tempoValue <= 0) JOptionPane.showMessageDialog(null, "O tempo não pode ser menor ou igual a 0!");
        else {
            double valor = Double.parseDouble(textoTxtValue);
            String investimentoSelecionado = (String) selectInv.getSelectedItem();
            switch (investimentoSelecionado) {
                case "Poupança":
                    Stack<Poupanca> pilhaPoupanca = new Stack<>();
                    pilhaPoupanca.push(new Poupanca(valor, tempoValue));
                    pilhaPoupanca.peek().calcValorFinal();
                    JOptionPane.showMessageDialog(null, "Resultado de " + pilhaPoupanca.peek().getTempoInvestido() + pilhaPoupanca.peek().getTextoTempoInvestido() + ": R$" + String.format("%.2f", pilhaPoupanca.peek().getMontante()) + "\n" + "Rendeu: " + String.format("%.2f", pilhaPoupanca.peek().getPorcRendimento()) + "%");
                    registros.add(pilhaPoupanca.pop());
                    break;
                case "CDB":
                    Stack<CDB> pilhaCDB = new Stack<>();
                    pilhaCDB.push(new CDB(valor, tempoValue));
                    pilhaCDB.peek().calcValorFinal();
                    JOptionPane.showMessageDialog(null, "Resultado de " + pilhaCDB.peek().getTempoInvestido() + pilhaCDB.peek().getTextoTempoInvestido() + ": R$" + String.format("%.2f", pilhaCDB.peek().getMontante()) + "\n" + "Rendeu: " + String.format("%.2f", pilhaCDB.peek().getPorcRendimento()) + "%");
                    registros.add(pilhaCDB.pop());
                    break;
                case "Tesouro Selic":
                    Stack<TesouroSelic> pilhaTSelic = new Stack<>();
                    pilhaTSelic.push(new TesouroSelic(valor, tempoValue));
                    pilhaTSelic.peek().calcValorFinal();
                    JOptionPane.showMessageDialog(null, "Resultado de " + pilhaTSelic.peek().getTempoInvestido() + pilhaTSelic.peek().getTextoTempoInvestido() + ": R$" + String.format("%.2f", pilhaTSelic.peek().getMontante()) + "\n" + "Rendeu: " + String.format("%.2f", pilhaTSelic.peek().getPorcRendimento()) + "%");
                    registros.add(pilhaTSelic.pop());
                    break;
                case "Ações":
                    Stack<Acao> pilhaAcoes = new Stack<>();
                    pilhaAcoes.push(new Acao(valor, tempoValue));
                    pilhaAcoes.peek().calcValorFinal();
                    JOptionPane.showMessageDialog(null, "Resultado de " + pilhaAcoes.peek().getTempoInvestido() + pilhaAcoes.peek().getTextoTempoInvestido() + ": R$" + String.format("%.2f", pilhaAcoes.peek().getMontante()) + "\n" + "Rendeu: " + String.format("%.2f", pilhaAcoes.peek().getPorcRendimento()) + "%");
                    registros.add(pilhaAcoes.pop());
                    break;
            }
                TipoInvestimento dadoNovo = registros.getRegistros().getLast();
                Object[] dados1 = {dadoNovo.getId(), dadoNovo.getNomeInvestimento(), String.format("%.2f", dadoNovo.getCapital()), String.format("%.2f", dadoNovo.getMontante()), String.format("%.2f", dadoNovo.getPorcRendimento()), dadoNovo.getTempoInvestido() + dadoNovo.getTextoTempoInvestido(), dadoNovo.getTaxa() != 0 ? String.format("%.2f", dadoNovo.getTaxa() * 100) : "Inexistente"};
                
                model.addRow(dados1);
        }
    }//GEN-LAST:event_btnAddInvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAdicionar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddInv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblTempo;
    private javax.swing.JComboBox<String> selectInv;
    private javax.swing.JSpinner spinnerTempo;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
